#!/bin/bash

# $1 = branch

parentsFile="$(git rev-parse --git-dir)/commit-tagger.parents"
ignoredFile="$(git rev-parse --git-dir)/commit-tagger.ignored"
parents="$(cat "$parentsFile" 2> /dev/null)"
ignored="$(cat "$ignoredFile" 2> /dev/null)"

tagIgnored="$(git config --get commit-tagger.tagignoredbranches || echo "true")"

function getParent {
  #$1 = branch
  local parent
  parent="$(printf "$parents" | sed -n "s|^$1:||p" | head -1)"
  if [ -n "$parent" ]; then
    printf "$parent"
    return 0
  else
    return 1
  fi
}

function isIgnored {
  # $1 = branch
  printf "$ignored" | grep -q "^$1$"
  return $?
}

function getTag {
  # $1 = branch
  # printf "$(printf $1 | sed "s|.*\/||")"
  printf "${1##*/}"
}


parent="$(getParent "$1")"
parentExists=$?

if  [ "$tagIgnored" != "true" -a "$tagIgnored" != "false" ]; then
  printf "Invalid option found: 'commit-tagger.tagignoredbranches=$tagIgnored'. Allowed values are true (default) and false.\nPlease use 'git config commit-tagger.tagignoredbranches true|false' to set a valid configuration.\n" >&2
  exit 1
fi

if ! isIgnored $1 || [ "$tagIgnored" = "true" ]; then
  tags="[$(getTag "$1")]"
  if [ "$parentExists" -eq 0 ]; then
    counter=20
    while [ "$parentExists" -eq 0 ] && ! isIgnored "$parent"; do
      tags="[$(getTag "$parent")]$tags"
      parent="$(getParent "$parent")"
      parentExists=$?
      counter=$(($counter - 1))
      if [ $counter -lt 0 ]; then
        printf "Sorry, there seems to be an error in the branch hierarchy causing an infinite loop.\n" >&2
        exit 1
      fi
    done
  fi

  printf "$tags\n"
else
  printf "Branch \e[1m$1\e[0m is currently being ignored.\n" >&2
  exit 1
fi
