#!/bin/sh

#$1 = filename that contains the message, $2 = source of the commit message

message="$(cat $1)"
branch="$(git rev-parse --abbrev-ref HEAD)"

hooksEnabled="$(git config --get commit-tagger.hooksenabled || echo "true")"
commitmsgEnabled="$(git config --get commit-tagger.commitmsgenabled || echo "true")"
tagIgnored="$(git config --get commit-tagger.tagignored || echo "true")"
confirm="$(git config --get commit-tagger.confirm || echo "true")"
tagMode="$(git config --get commit-tagger.tagmode || echo "opt-out")"

if [ -n "$2" -a  "$2" != "message" ]; then
  exit 0
fi

if [ "$hooksEnabled" = "false" ]; then
  exit 0
elif [ "$hooksEnabled" != "true" ]; then
  printf "Invalid option found: commit-tagger.hooksenabled=$hooksEnabled. Allowed values are true (default) and false.\n" >&2
  printf "Please use 'git config commit-tagger.hooksenabled true|false' to set a valid configuration.\n" >&2
  exit 1
fi

if [ "$commitmsgEnabled" = "false" ]; then
  exit 0
elif [ "$commitmsgEnabled" != "true" ]; then
  printf "Invalid option found: commit-tagger.commitmsgenabled=$commitmsgEnabled. Allowed values are true (default) and false.\n" >&2
  printf "Please use 'git config commit-tagger.commitmsgenabled true|false' to set a valid configuration.\n" >&2
  exit 1
fi

function prompt {
  # $1 = message

  while true; do
    printf "$1"
    exec < /dev/tty
    read promptRes
    case "$promptRes" in
      [yY]|[yY][eE][sS])
        return 0
      ;;
      [nN]|[nN][oO])
        return 1
      ;;
    esac
  done
}

function tagMessage {
  # $1 = message

  local str
  #str="$(echo "$1" | sed "1 s|^\([^\[].*\)$| \1|")"
  if [ "${1:0:1}" = "[" ]; then
    str="$(git commit-tagger tag)$1"
  else
    str="$(git commit-tagger tag) $1"
  fi
  if [ $? != 0 ]; then
    exit 1
  fi
  printf "$str"
  return 0
}

case "$tagMode" in
  "opt-in" )
    # if echo "$message" | head -1 | grep -q "^+"; then
    #   message="$(echo "$message" | sed "1 s|^+||")"
    if [ "${message:0:1}" = "+" ]; then
      message="$(tagMessage "${message:1}")"
    fi
  ;;

  "opt-out" )
    # if echo "$message" | head -1 | grep -q -v "^-"; then
    if [ "${message:0:1}" != "-" ]; then
      message="$(tagMessage "$message")"
    else
      # message="$(echo "$message" | sed "1 s|^-||")"
      message="${message:1}"
    fi
  ;;

  * )
    printf "Invalid option found: commit-tagger.tagmode=$tagMode. Allowed values are opt-in and opt-out (default).\n" >&2
    printf "Please use 'git config commit-tagger.tagmode opt-in|opt-out' to set a valid configuration.\n" >&2
    exit 1
  ;;
esac

if [ "$2" = "message" ]; then
  case "$confirm" in
    "true")
      formatMessage="$(printf "$message" | sed "s|^|  |")"
      printf "The commit message will be the following:\n\n$formatMessage\n\n\n"
      prompt "Do you wish to continue? [yes or no]: "
      if [ $? = 0 ]; then
        printf "$message" > $1
        exit 0
      else
        printf "The commit has been aborted."
        exit 1
      fi
    ;;
    "false")
      printf "$message" > $1
    ;;
    *)
      printf "Invalid option found: commit-tagger.confirm=$confirm. Allowed values are true (default) and false.\n" >&2
      printf "Please use 'git config commit-tagger.confirm true|false' to set a valid configuration.\n" >&2
      exit 1
    ;;
  esac
else
  printf "$message" > $1
  exit 0
fi
