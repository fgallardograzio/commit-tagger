#!/bin/bash

installDir="$(cat "$HOME"/.commit-tagger/installation_path  2> /dev/null)"

function prompt {
  # $1 = message

  while true; do
    printf "%s" "$1"
    read -r promptRes
    case "$promptRes" in
      [yY]|[yY][eE][sS])
        return 0
        ;;
      [nN]|[nN][oO])
        return 1
        ;;
    esac
  done
}

function abortUninstall {
  # $1 = condition, $2 = message

  if [ $1 != 0 ]; then
    printf "%s\n" "$2" >&2
    printf "Uninstallation aborted.\n" >&2
    exit 1
  fi
}

test -n "$installDir"
abortUninstall $? "File '$HOME/.commit-tagger/installation_path' not found or empty."

printf "You are about to uninstall 'commit-tagger'. The following files and folders will be permanently deleted:\n\n"
printf "%s/git-commit-tagger\n" "$installDir"
find "$HOME"/.commit-tagger
printf "\n"
printf "Warning: If you remove commit-tagger without previously removing all of its hooks from existing repositories\n"
printf "errors will occur and you will have to delete said files manually.\n\n"
prompt "Do you wish to continue? [yes or no]: "
abortUninstall $?

rm "$installDir"/git-commit-tagger &> /dev/null
abortUninstall $? "Cannot delete '$installDir/git-commit-tagger'."

rm -R "$HOME"/.commit-tagger &> /dev/null
abortUninstall $? "An error occurred while deleting the contents of '$HOME/.commit-tagger'."

printf "\nUninstallation successful.\n"
exit 0
